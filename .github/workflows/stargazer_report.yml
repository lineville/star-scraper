# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ðŸŒŸ StarGazer Report

on:
  workflow_dispatch:
    inputs:
      org:
        description: "GitHub Organization"
        required: true
      repo:
        description: "GitHub Repository"
        required: true
      limit:
        description: "Max stargazers to fetch"
        required: false
        default: "10000"
      runtime:
        type: choice
        description: Language runtime to use
        required: false
        default: Rust (ðŸ¦€ cargo)
        options: 
        - Rust (ðŸ¦€ cargo)
        - TypeScript (ðŸŸ¦ npm)

jobs:
  tsc:
    if: ${{ github.events.inputs.runtime }} == 'TypeScript (ðŸŸ¦ npm)'
    name: ðŸ“¦ Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: yarn install --frozen-lockfile
        run: yarn install
      - name: tsc
        uses: icrawl/action-tsc@v1
  report-tsc:
    if: ${{ github.events.inputs.runtime }} == 'TypeScript (ðŸŸ¦ npm)'
    needs: tsc
    name: ðŸŒŸ StarGazer Report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "14.x"
      - run: yarn install --frozen-lockfile
      - run: yarn --silent start --org ${{ github.event.inputs.org }} --repo ${{ github.event.inputs.repo }} --limit ${{ github.event.inputs.limit }} --token ${{ secrets.GH_TOKEN }} >> $GITHUB_STEP_SUMMARY
  report-cargo:
    if: ${{ github.events.inputs.runtime }} == 'Rust (ðŸ¦€ cargo)'
    name: ðŸŒŸ StarGazer Report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: --org ${{ github.events.inputs.org }} --repo ${{ github.events.inputs.repo }} --limit ${{ github.events.inputs.limit }} --token ${{ secrets.GH_TOKEN }} >> $GITHUB_STEP_SUMMARY
